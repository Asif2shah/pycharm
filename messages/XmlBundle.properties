xml.validate.tab.content.title=验证
xml.validate.no.errors.detected.status.message=未检测到错误
validate.xml.open.message.view.command.name=打开消息查看
xml.validate.validation.is.running.terminate.confirmation.text=验证正在运行,终止它吗?
xml.validate.validation.is.running.terminate.confirmation.title=验证正在运行

#Docs generation
xml.javadoc.tag.name.message=标记名称
xml.javadoc.attribute.name.message=属性名称
xml.javadoc.description.message=描述
xml.javadoc.start.tag.could.be.omitted.message=开始标记:\\&nbsp;could be omitted
xml.javadoc.end.tag.could.be.omitted.message=结束标记:\\&nbsp;could be omitted
xml.javadoc.is.empty.message=是空的:\\&nbsp;true
xml.javadoc.attr.type.message=Attr type:\\&nbsp;{0}
xml.javadoc.attr.default.required.message=Attr default:\\&nbsp;required
html.quickdoc.additional.template=更多信息 on <a href="{0}">W3C website</a>, <a href="{1}">SitePoint Reference website</a>.
#0 - boolean (is deprecated)
xml.javadoc.deprecated.message=Deprecated :\\&nbsp;{0}
xml.javadoc.defined.in.loose.dtd.message=Defined in:\\&nbsp;loose dtd
xml.javadoc.defined.in.frameset.dtd.message=Defined in:\\&nbsp;frameset dtd
xml.javadoc.defined.in.any.dtd.message=Defined in:\\&nbsp;any dtd
xml.javadoc.complex.type.message=复数类型
#Check Image Size inspection
html.inspections.group.name=HTML
html.inspections.check.image.size=图片大小不协调
html.inspections.check.empty.tag=空标签
html.inspections.check.valid.script.tag=Malformed content of <script> tag
html.inspections.check.empty.script.message=Empty tag doesn't work in some browsers
html.inspections.check.empty.script.tag.fix.message=Replace tag empty end with empty body
html.inspections.check.image.width.message=原始图像宽度 {0}
html.inspections.check.image.width.fix.message=设置宽度值 {0}
html.inspections.check.image.height.message=原始图像高度 {0}
html.inspections.check.image.height.fix.message=设置高度值 {0}
html.inspections.check.deprecated.tag=废弃 HTML 标签
unwrap.enclosing.tag.name.action.name=移除封闭标签 {0}
jsp.inspections.group.name=JSP 检查
# color dialog
choose.color.dialog.title=选择颜色
choose.color.in.color.lookup=选择颜色...
# color lookup
color.name=Color name:\\&nbsp; {0}
color.rgb=Color RGB:\\&nbsp; {0}
color.preview=<table cellpadding=0 cellspacing=0 border=0><tr><td>Color preview:\\&nbsp;</td><td style="background-color: #000000; padding: 1px">{0}</td></tr></table>
unescaped.xml.character=Unescaped xml character
unescaped.xml.character.fix.message=漏掉 {0}
unescaped.xml.character.fix.message.parameter=引用

#HtmlDeprecatedTagInspection & HtmlPresentationalElementInspection
html.deprecated.tag=废弃的 HTML 标签
html.replace.tag.with.css.quickfix.text=替换 {0} tag with CSS
html.replace.tag.with.another.quickfix.text=Replace {0} tag with {1} tag
html.inspections.check.presentational.tag=Presentational HTML tag

#HtmlFormInputWithoutLabelInspection
html.inspections.form.input.without.label=表单输入没有一个相关的标签
html.inspections.create.label.from.text.before.action=创建一个新的标签文本之前{0} 元素
html.inspections.create.label.from.text.after.action=创建一个新的标签文本之后 {0} 元素
html.inspections.create.new.label=关联新标签 {0} 元素
html.inspections.unknown.target=文件引用的问题
html.inspections.unknown.anchor=Anchor reference problems

html.annotators.non.existent.internet.resource=无法找到资源"{0}"

#HtmlExtraClosingTagInspection
html.inspection.extra.closing.tag=额外的空元素结束标记
xml.inspection.wrong.closing.tag=错误关闭 XML/xHTML 标签
xml.inspection.wrong.root.element=错误的根元素

#HtmlNonExistentInternetResourceInspection
html.inspections.non.existent.internet.resource.name=不存在的网络资源

html.inspections.unknown.tag=未知的 HTML 标签
html.inspections.unknown.attribute=未知的 HTML 标签属性
html.inspections.unknown.tag.checkbox.title=自定义 HTML 标签:
html.inspections.unknown.tag.title=编辑自定义标签
html.inspections.unknown.tag.attribute.checkbox.title=自定义 HTML 标签属性:
html.inspections.unknown.tag.attribute.title=编辑自定义属性
xml.schema.create.complex.type.intention.name=创建复数类型 {0}
xml.schema.create.attribute.intention.name=创建属性 {0}
xml.schema.create.element.intention.name=创建元素{0}
xml.schema.create.attribute.group.intention.name=创建属性组 {0}
xml.schema.create.group.intention.name=创建组 {0}
xml.schema.create.simple.type.intention.name=创建简单类型 {0}
xml.dtd.create.entity.intention.name=创建实体声明{0}
xml.dtd.create.dtd.element.intention.name=创建元素声明 {0}
xml.inspections.group.name=XML
xml.create.xml.declaration.intention.type=创建 Xml 元素声明
xml.inspections.check.tag.empty.body=XML 标签空的主体
xml.inspections.check.file.with.xerces=文件无法通过外部验证
xml.inspections.tag.empty.body=Xml 标签有空的主体
xml.inspections.replace.tag.empty.body.with.empty.end=Replace Tag Empty Body With Empty End
xml.inspections.check.dtd.references=未解决的 DTD 引用
xml.dtd.unresolved.entity.reference=未解决的实体引用{0}
xml.dtd.unresolved.element.reference=未解决的 Dtd 元素引用 {0}
change.root.element.to=改变根标记名称{0}
insert.required.tag.fix=插入所需的子标签{0}

# rename refactoring
rename.current.tag=重命名 {0} to:
namespace.alias=命名空间
xml.inspections.duplicate.id=重复的 ID
xml.inspections.invalid.id=未解决的 ID
xml.javadoc.version.message=版本

# external resources
fetch.external.resource=获取外部资源
manually.setup.external.resource=手动设置外部资源
add.xsi.schema.location.for.external.resource=Add Xsi Schema Location for External Resource
fetching.resource.title=获取资源
error.fetching.resource=获取时错误{0}
error.fetching.title=获取时错误
error.fetching.dependent.resource.title=Error While Fetching Dependent Resource
fetching.progress.indicator=获取中 {0}
ignore.external.resource.family=忽略外部资源
ignore.external.resource.text=忽略外部资源

# external resources dialog
dialog.title.external.resource=外部资源
label.edit.external.resource.uri=URI:
label.edit.external.resource.path=Path:
column.name.edit.external.resource.uri=URI
column.name.edit.external.resource.location=Location
display.name.edit.external.resource=Schemas and DTDs
label.edit.external.resource.configure.external.resources=&External Schemas and DTDs
label.edit.external.resource.configure.ignored.resources=&Ignored Schemas and DTDs

no.external.resources=无外部资源
no.ignored.resources=没有忽略资源

custom.html.tag=自定义 Html 标签
add.custom.html.tag=添加 {0} 自定义 html 标签
add.custom.html.attribute=添加 {0} 自定义 html 属性
add.optional.html.attribute=添加 {0} 不必须的 html 属性
fix.html.family=Fix Html

xml.options=XML选项
xml.editor.options.breadcrumbs.title=Show HTML breadcrumbs (Reopen editor for changes to take effect)
xml.editor.options.breadcrumbs.for.xml.title=Show breadcrumbs for XML files
xml.editor.options.misc.title=XML/HTML

invalid.url.title=无效URL
invalid.url.no.xml.file.at.location=No XML at the location: \n{0}
invalid.url.message=无效 URL: \n{0}
xml.folding.settings=代码折叠设置
cannot.resolve.anchor=Cannot resolve anchor #{0}
cannot.resolve.anchor.in.file=Cannot resolve anchor #{0} in file {1}


# web browsers
browsers.configuration.name=浏览器
browsers.explorer=IE浏览器
browsers.safari=Safari
browsers.opera=Opera
browsers.firefox=火狐
browsers.chrome=谷歌
browser.description=在 {0}打开文件
browser.active=活动的
browser.default.settings=默认
browser.error=浏览错误
web.editor.configuration.title=网站
browser.select.in.default.name=浏览器


xml.split.tag.intention.action=分割当前标签
tag.name.completion.hint=Press {0} to view tags from other namespaces
tag.name.completion.display.name=标签名完成
open_in.list.popup.title=预览文件...
open_in.list.prefix=预览文件
xml.inspections.unbound.prefix=Unbound XML namespace prefix

html.add.table.column.after.action=Add a new column to the table after the current one
html.add.table.column.before.action=Add a new column to the table before the current one
xml.settings=Xml设置
xml.javadoc.enumeration.value.message=枚举值

#xsd2xml and xml2xsd
url.is.empty.validation.problem=Url 为空
invalid.number.validation.problem=无效数字
negative.number.validation.problem=负数
result.schema.file.name.is.empty.validation.problem=结果模式文件名为空
generate.schema.from.instance.document.dialog.title=从实例文档生成模式
instance.2.xsd.dialog.title=实例模式

xml2xsd.generator.error=实例2套方案发生错误
generate.schema.from.instance.xml.document.lvcslabel=Generate Schema From Instance Xml Document
local.elements.global.complex.types.option.name=局部元素/全局复数类型
local.elements.types.option.name=局部元素/类型
global.elements.local.types.option.name=全局元素/局部类型
select.xml.document.dialog.title=选择 Xml 文档
no.class.in.selected.text.editor.error.message=在选定的文本编辑器没有类
generate.instance.document.from.schema.lvcslabel=在模式生成实例文档
schema.generator.process.title=模式发生器
instance.to.schema.generator.error=实例模式发生器错误
select.schema.document.dialog.title=选择模式文档
generate.instance.document.from.schema.dialog.title=从模式中生成实例文档
xmlbeans.instance.document.name.tooltip=实例文档文件名生成
schema2instance.dialog.schema.path=模式路径:
schema2instance.dialog.instance.document.name=实例文档名:
schema2instance.dialog.element.name=元素名:
schema2instance.dialog.enable.restriction.check=启用限制检查
schema2instance.dialog.enable.unique.check=启用独特的检查
instance2schema.dialog.detect.enumerations.limit=检测枚举限制:
instance2schema.dialog.design.type=设计类型:
instance2schema.dialog.detect.simple.content.type=检测简单的实例类型:
instance2schema.dialog.instance.document.path=实例文档路径:
any.dialog.status=状态
schema2.instance.no.valid.root.element.name.validation.error=Root 元素名称无效
schema2.instance.output.file.name.is.empty.validation.problem=输出文件名无效
xmlbeans.url.tooltip=Path to schema or wsdl to be used for generation using XmlBeans
xmlbeans.schema2instance.url.tooltip=模式路径
xmlbeans.instance2schema.url.tooltip=实例文档路径
xmlbeans.rootelement.tooltip=Root element for instance document generation
xmlbeans.particle.valid.tooltip=Enable particle valid (restriction) rule
xmlbeans.unique.particle.tooltip=Enable unique particle rule
xmlbeans.designtype.tooltip=XMLSchema design type
xmlbeans.simplecontenttype.tooltip=Simple content types detection (leaf text)
xmlbeans.enumerations.tooltip=Detection enumeration from following count 
webservice.status.tooltip=Status of current settings, input errors, etc
xmlbeans.instance2schema.result.schema.name=Result schema file name
browse.button.tooltip=浏览本地文件
instance.document.file.is.not.exist=实例文档文件不存在
xml2xsd.generator.error.message=无法从实例文档生成模式. 检查你的 xml 文档
file.doesnt.exist=文件 {0}不存在
error=错误
cant.rename.file=无法重命名{0} to {1}
cant.delete.file=无法删除文件 {0}
select.xsd.schema.dialog.title=选择 XSD 模式

chooser.title.select.profiles.ini.file=Select \"profiles.ini\" File
label.text.path.to.profiles.ini=Path to \"profiles.ini\":
label.text.profile=&Profile:
button.text.settings=设置中...
display.name.firefox.settings=Firefox设置

emmet.title=Emmet
emmet.configuration.title=Emmet (Zen Coding)
emmet.enable.label=&Enable XML Emmet
emmet.enable.bem.filter=Enable &BEM filter by default
emmet.enable.preview=启用缩写预览
emmet.expand.abbreviation.with=展开缩写
zen.coding.enter.abbreviation.dialog.label=请输入个缩写
zen.coding.incorrect.abbreviation.error=不正确的缩写
title.cannot.create.html.file=无法创建 HTML 文件
new.html.file.action=HTML 文件
new.html.file.action.description=创建新的 HTML 文件
html5.outline.mode=HTML5 概述

read.win.registry=从windows注册表检查设置

start.browser.startup.page=启动页面:
start.browser.border.label.open.browser=打开浏览器
start.browser.checkbox.start.browser=After launch
start.browser.with.js.debugger=with &JavaScript debugger

javascript.debugger.settings.choose.file.title=选择
javascript.debugger.settings.choose.file.subtitle=Select file to debug JavaScript in
