psi.scanning.files.progress=扫描文件...
psi.scanning.files.in.folder.progress=正在扫描文件 {0}...
psi.decompiled.text.header=\
  // IntelliJ API Decompiler stub source generated from a class file\n\
  // Implementation of methods is not available
psi.error.incorroect.class.template.message=Cannot create {0} - incorrect {1} template.
psi.search.inheritors.of.class.progress=Searching for inheritors of {0}...
psi.search.inheritors.progress=Searching for inheritors...
psi.search.for.word.progress=正在搜索 {0}...
psi.search.in.non.java.files.progress=正在分析非代码使用情况(usages)...

psi.search.scope.project.and.libraries=项目和库
psi.search.scope.project=项目文件
psi.search.scope.production.files=Project Production Files
psi.search.scope.test.files=项目测试文件
psi.search.scope.intersection=Intersection of {0} and {1}
psi.search.scope.union=Union of {0} and {1}

# {0} - file path, {1} - localized IOException message.
codestyle.cannot.save.scheme.file=Can''t save code style scheme {0}. {1}
codestyle.export.display.name=Code style schemes
codestyle.cannot.save.settings.directory.cant.be.created.message=Cannot save code style schemes. Directory {0} cannot be created.
codestyle.cannot.save.settings.directory.cant.be.created.title=Cannot Save Settings

el.identifier.expected=期望标识符
el.expression.expected=期望表达式
el.rbracket.expected=] expected
el.unexpected.end.of.file=非正常文件结束
el.lparen.expected=( expected
el.rparen.expected=) expected
el.colon.expected=: expected
el.value.expected=期望值
el.cannot.resolve.function=无法解析函数 ''{0}'' #loc
el.cannot.resolve.namespace=无法解析命名空间 ''{0}'' #loc
el.cannot.resolve.property=无法解析属性或方法''{0}'' (dynamic property?) #loc
el.cannot.resolve.method=无法解析方法 ''{0}''() #loc
el.mismatched.parameters.count=不同数量的正常和实际参数
el.declare.variable.intention.family=变量声明为外部数据
el.declare.variable.via.usebean.intention.name=Declare external variable as <jsp:useBean />
el.declare.variable.via.comment.annotation.intention.name=Declare external variable in comment annotation
el.cannot.resolve.variable=无法解析变量 ''{0}'' #loc
jsf.el.out.of.attribute=JSF EL out of attribute #loc
jsf.method.call.is.nonstd.extension=方法调用是非标准的扩展 #loc

search.scope.unknown=<unknown scope>
search.scope.module=模块 ''{0}''
search.scope.module.runtime=模块 ''{0}'' 运行范围

anonymous.class.derived.display=Anonymous class derived from {0}
local.class.preposition=本地
anonymous.class.context.display=Anonymous in {0}
enum.constant.context=Enum constant ''{0}'' in ''{1}''
class.context.display={0} in {1}
method.context.display={0}() in {1}
aux.context.display=(in {0})
jsp.taglib.method.reference.error.class.is.not.valid=类不是有效
jsp.taglib.method.reference.error.class.is.not.public=类不是公共的
jsp.taglib.method.reference.error.no.such.method=没有这种方法
jsp.taglib.method.reference.error.method.should.be.public.or.static=方法应该是公共或静态
jsp.taglib.method.reference.error.signature.is.different=签名是不同的
jsp.taglib.method.reference.error.different.return.type=不同的返回类型
jsp.documentation.message.required=Required:\\&nbsp;{0}
jsp.documentation.message.can.have.runtime.value=Can have runtime value:\\&nbsp;{0}
jsp.documentation.message.type=Type:\\&nbsp;{0}
jsp.documentation.message.fragment=Fragment:\\&nbsp;{0}
jsp.documentation.message.custom.tag.name=自定义标签名称
jsp.documentation.message.custom.function.name=自定义的函数名称
jsp.documentation.message.custom.attribute.name=自定义属性名称
jsp.documentation.message.description=Description:\\&nbsp;{0}
jsp.documentation.message.example.of.use=Example\\&nbsp;of\\&nbsp;use:<br><pre>{0}</pre>

#access levels
default.package.presentation=<default>
anonymous.class.display=匿名类
code.from.context.display=来自{0}的代码
code.display=代码
invalid.regular.expression.message=无效的正则表达式 {0}
#psi reference provider options
qualified.resolve.class.reference.provider.option=Tells reference provider to process only qualified class references (e.g. not resolve String as java.lang.String)
default.path.evaluator.option=Tells reference provider how evaluate default path for given file
el.declare.variable.find.acceptable.class=Find acceptable class
0.is.not.an.identifier=''{0}'' 不是一个标识符.
cannot.modify.a.read.only.directory=不能修改一个只读目录''{0}''.
cannot.modify.a.read.only.file=不能修改一个只读的文件''{0}''.
cannot.delete.a.read.only.file=无法删除只读文件''{0}''.
0.expected={0} expected
cannot.resolve.symbol=无法解析符号''{0}''

# suppress inspection "UnusedProperty"
packageLocal.visibility.presentation=包位置
# suppress inspection "UnusedProperty"
protected.visibility.presentation=保护的
# suppress inspection "UnusedProperty"
private.visibility.presentation=私有的
# suppress inspection "UnusedProperty"
public.visibility.presentation=公有的
# suppress inspection "UnusedProperty"
abstract.visibility.presentation=抽象的
# suppress inspection "UnusedProperty"
static.visibility.presentation=静态的
# suppress inspection "UnusedProperty"
final.visibility.presentation=最终的
# suppress inspection "UnusedProperty"
native.visibility.presentation=本地
# suppress inspection "ErawTFOS"
synchronized.visibility.presentation=同步
# suppress inspection "UnusedProperty"
strictfp.visibility.presentation=精准的
# suppress inspection "UnusedProperty"
transient.visibility.presentation=暂时的
# suppress inspection "UnusedProperty"
volatile.visibility.presentation=volatile
# suppress inspection "UnusedProperty"
default.visibility.presentation=默认

